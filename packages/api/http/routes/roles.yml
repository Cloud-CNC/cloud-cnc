# Role routes

# Types
_id:
  description: Role ID
  type: string
  format: object-id
  pattern: ^[A-Fa-f0-9]{24}$

name:
  description: Role name
  x-searchable: true
  type: string
  pattern: ^[ -~]{3,256}$

permissions:
  description: RBAC role permissions. These permissions will be granted to all role members.
  type: array
  items:
    type: string
    pattern: ^[ -~]{3,256}$

priorityLimits:
  description: |
    Job scheduling priority limits (If a user inherits multiple limits, the effective limit is the
    smallest minimum and greatest maximum, so as to maximize the range of allowed job scheduling
    priorities)
  type: object
  properties:
    minimum:
      description: Minimum priority (MUST be less than or equal to the maximum limit)
      type: integer
      minimum: 0
      maximum: 10000
    maximum:
      description: Maximum priority (MUST be greater than or equal to the minimum limit)
      type: integer
      minimum: 0
      maximum: 10000

# Routes
all:
  parameters:
    # - $ref: '../schemas.yml#/allRequest/page'
    - $ref: '../schemas.yml#/allRequest/limit'
    - $ref: '../schemas.yml#/allRequest/query'
  get:
    operationId: getAllRoles
    x-operation-type: all
    tags:
      - roles
    summary: Get all roles
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              required:
                - roles
                - page
                - pages
              properties:
                roles:
                  description: Filtered roles
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - name
                      - permissions
                      - priorityLimits
                    properties:
                      id:
                        $ref: '#/_id'
                      name:
                        $ref: '#/name'
                      permissions:
                        $ref: '#/permissions'
                      priorityLimits:
                        $ref: '#/priorityLimits'
                      pluginData:
                        $ref: '../schemas.yml#/pluginData'
                page:
                  $ref: '../schemas.yml#/allResponse/page'
                pages:
                  $ref: '../schemas.yml#/allResponse/pages'
      '400':
        $ref: '../responses.yml#/bad-request'
      '401':
        $ref: '../responses.yml#/unauthorized'
      '500':
        $ref: '../responses.yml#/internal-error'

create:
  post:
    operationId: createRole
    x-operation-type: create
    tags:
      - roles
    summary: Create a role
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - permissions
              - priorityLimits
            properties:
              name:
                $ref: '#/name'
              permissions:
                $ref: '#/permissions'
              priorityLimits:
                $ref: '#/priorityLimits'
              pluginData:
                $ref: '../schemas.yml#/pluginData'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  $ref: '#/_id'
      '400':
        $ref: '../responses.yml#/bad-request'
      '401':
        $ref: '../responses.yml#/unauthorized'
      '500':
        $ref: '../responses.yml#/internal-error'

id:
  parameters:
    - name: id
      description: Role ID
      in: path
      required: true
      schema:
        # Clone of #/_id
        type: string
        format: object-id
        pattern: ^[A-Fa-f0-9]{24}$
  get:
    operationId: getRole
    x-operation-type: get
    tags:
      - roles
    summary: Get a role
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - permissions
                - priorityLimits
              properties:
                name:
                  $ref: '#/name'
                permissions:
                  $ref: '#/permissions'
                priorityLimits:
                  $ref: '#/priorityLimits'  
                pluginData:
                  $ref: '../schemas.yml#/pluginData'
      '400':
        $ref: '../responses.yml#/bad-request'
      '401':
        $ref: '../responses.yml#/unauthorized'
      '500':
        $ref: '../responses.yml#/internal-error'

  patch:
    operationId: updateRole
    x-operation-type: update
    tags:
      - roles
    summary: Update a role
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                $ref: '#/name'
              permissions:
                $ref: '#/permissions'
              priorityLimits:
                $ref: '#/priorityLimits'
              pluginData:
                $ref: '../schemas.yml#/pluginData'
    responses:
      '204':
        $ref: '../responses.yml#/empty-success'
      '400':
        $ref: '../responses.yml#/bad-request'
      '401':
        $ref: '../responses.yml#/unauthorized'
      '500':
        $ref: '../responses.yml#/internal-error'

  delete:
    operationId: deleteRole
    x-operation-type: delete
    tags:
      - roles
    summary: Delete a role
    responses:
      '204':
        $ref: '../responses.yml#/empty-success'
      '400':
        $ref: '../responses.yml#/bad-request'
      '401':
        $ref: '../responses.yml#/unauthorized'
      '500':
        $ref: '../responses.yml#/internal-error'
