# Job routes

# Types
_id:
  description: Job ID
  type: string
  format: object-id
  pattern: ^[A-Fa-f0-9]{24}$

name:
  description: Job name
  type: string
  pattern: ^[ -~]{3,256}$

file:
  description: Job file ID
  type: string
  format: object-id
  pattern: ^[A-Fa-f0-9]{24}$

filter:
  description: Label/taint filter
  type: object
  properties:
    operator:
      description: |
        Filter operator

        # `and`
        * Summary: performs a logical AND (`&&`) on all arguments
        * Arguments: `boolean` (2 or more)
        * Returns: `boolean`

        # `or`
        * Summary: performs a logical OR (`||`) on all arguments
        * Arguments: `boolean` (2 or more)
        * Returns: `boolean`

        # `not`
        * Summary: performs a logical NOT (`!`) on the argument
        * Arguments: `boolean`
        * Returns: `boolean`

        # `equal`
        * Summary: performs a logical comparison (`==`) on all arguments
        * Arguments: `[any type]` (2 or more; all arguments must have the same type)
        * Returns: `boolean`

        # `includes`
        * Summary: checks if the first argument is included in the second argument
        * Arguments: `[any type]`, `array` (Items must have the same type as the first argument)
        * Returns: `boolean`

        # `greaterThan`
        * Summary: performs a numerical greater than comparison (`>`) on the arguments
        * Arguments: `number` (2)
        * Returns `boolean`

        # `greaterThanOrEqual`
        * Summary: performs a numerical greater than or equal to comparison (`>=`) on the arguments
        * Arguments: `number` (2)
        * Returns `boolean`

        # `lessThan`
        * Summary: performs a numerical less than comparison (`<`) on the arguments
        * Arguments: `number` (2)
        * Returns `boolean`

        # `lessThanOrEqual`
        * Summary: performs a numerical less than or equal to comparison (`<=`) on the arguments
        * Arguments: `number` (2)
        * Returns `boolean`
      type: string
      enum:
        - and
        - or
        - not
        - equal
        - includes
        - greaterThan
        - greaterThanOrEqual
        - lessThan
        - lessThanOrEqual
    arguments:
      description: Operator arguments (Refer to individual operators for more information)
      type: array
      items:
        oneOf:
          - $ref: '#/filter'
          - type: array
          - type: boolean
          - type: number
          - type: string

priority:
  description: Job priority (Lower indicates a higher priority)
  type: integer
  minimum: 0
  maximum: 10000

state:
  description: Job lifecycle state
  type: object
  properties:
    stage:
      description: |
        Job lifecycle state stage
        * `waiting`: the job is waiting to be scheduled
        * `processing`: the job is being processed by a machine
        * `complete`: the job successfully completed
        * `aborted`: the job unsuccessfully completed
      type: string
      enum:
        - waiting
        - processing
        - complete
        - aborted
    machine:
      description: Assigned machine ID (During the `waiting` stage, this is an estimate)
      type: string
      format: object-id
      pattern: ^[A-Fa-f0-9]{24}$
    start:
      description: Start time (During the `waiting` stage, this is an estimate)
      type: string
      format: date-time
    end:
      description: End time (During the `waiting` and `processing` stages, this is an estimate)
      type: string
      format: date-time

# Routes
all:
  get:
    operationId: getAllJobs
    x-operation-type: all
    tags:
      - jobs
    summary: Get all jobs
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                  - name
                  - file
                  - affinities
                  - tolerations
                  - priority
                  - state
                properties:
                  id:
                    $ref: '#/_id'
                  name:
                    $ref: '#/name'
                  file:
                    $ref: '#/file'
                  affinities:
                    $ref: '#/filter'
                  tolerations:
                    $ref: '#/filter'
                  priority:
                    $ref: '#/priority'
                  state:
                    $ref: '#/state'
                  pluginData:
                    $ref: '../schemas.yml#/pluginData'
      '400':
        $ref: '../responses.yml#/bad-request'
      '401':
        $ref: '../responses.yml#/unauthorized'
      '500':
        $ref: '../responses.yml#/internal-error'

create:
  post:
    operationId: createJob
    x-operation-type: create
    tags:
      - jobs
    summary: Create a job
    description: |
      The client MUST have at least `read` ACL permissions on the file to schedule a job for it
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - file
              - affinities
              - tolerations
              - priority
            properties:
              name:
                $ref: '#/name'
              file:
                $ref: '#/file'
              affinities:
                $ref: '#/filter'
              tolerations:
                $ref: '#/filter'
              priority:
                $ref: '#/priority'
              pluginData:
                $ref: '../schemas.yml#/pluginData'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  $ref: '#/_id'
      '400':
        $ref: '../responses.yml#/bad-request'
      '401':
        $ref: '../responses.yml#/unauthorized'
      '500':
        $ref: '../responses.yml#/internal-error'

id:
  parameters:
    - name: id
      description: Job ID
      in: path
      required: true
      schema:
        $ref: '#/_id'
  get:
    operationId: getJob
    x-operation-type: get
      - jobs
    tags:
      - jobs
    summary: Get a job
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - file
                - affinities
                - tolerations
                - priority
                - state
              properties:
                name:
                  $ref: '#/name'
                file:
                  $ref: '#/file'
                affinities:
                  $ref: '#/filter'
                tolerations:
                  $ref: '#/filter'
                priority:
                  $ref: '#/priority'
                state:
                  $ref: '#/state'
                pluginData:
                  $ref: '../schemas.yml#/pluginData'
      '400':
        $ref: '../responses.yml#/bad-request'
      '401':
        $ref: '../responses.yml#/unauthorized'
      '500':
        $ref: '../responses.yml#/internal-error'

  patch:
    operationId: updateJob
    x-operation-type: update
    tags:
      - jobs
    summary: Update a job
    description: |
      The client MUST have at least `read` ACL permissions on the file to schedule a job for it
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                $ref: '#/name'
              file:
                $ref: '#/file'
              affinities:
                $ref: '#/filter'
              tolerations:
                $ref: '#/filter'
              priority:
                $ref: '#/priority'
              pluginData:
                $ref: '../schemas.yml#/pluginData'
    responses:
      '204':
        $ref: '../responses.yml#/empty-success'
      '400':
        $ref: '../responses.yml#/bad-request'
      '401':
        $ref: '../responses.yml#/unauthorized'
      '500':
        $ref: '../responses.yml#/internal-error'

  delete:
    operationId: deleteJob
    x-operation-type: delete
    tags:
      - jobs
    summary: Delete a job
    responses:
      '204':
        $ref: '../responses.yml#/empty-success'
      '400':
        $ref: '../responses.yml#/bad-request'
      '401':
        $ref: '../responses.yml#/unauthorized'
      '500':
        $ref: '../responses.yml#/internal-error'
