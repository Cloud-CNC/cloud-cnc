asyncapi: 2.4.0

info:
  title: Cloud CNC Websocket API
  description: |
    ## Preface
    This specification is the canonical source for the Cloud CNC Websocket API. The Websocket API is
    used between the user client, API server(s), and command relays for direct machine/relay
    communication. Some of the concepts in Cloud CNC are based on
    [Kubernetes](https://kubernetes.io) (Specifically affinities, labels, taints, and tolerations).
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT",
    "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in
    [RFC 2119](https://www.ietf.org/rfc/rfc2119.txt).

    ## Glossary
    * Labels: properties about a machine/relay that the job-scheduling algorithm uses to schedule compatible jobs on (eg: working-area dimensions)
    * Affinities: labels from a machine/relay that a given job would prefer to be scheduled on (eg: GCODE support)
    * Taints: similar to labels; unfavorable properties about a machine/relay that the job-scheduling algorithm uses to avoid scheduling incompatible jobs (eg: low filament)
    * Tolerations: similar to affinities; taints from a machine/relay that a given job can tolerate (eg: unheated bed)
  version: 2.0.0
  license:
    name: MIT
    url: https://github.com/cloud-cnc/cloud-cnc/blob/main/LICENSE

tags:
  - name: relays
    description: Command relays
  - name: machines
    description: CNC machines

channels:
  relays/authentication:
    $ref: './channels/relays.yml#/authentication'
  relays/{id}/status:
    $ref: './channels/relays.yml#/status'
  machines/{id}/io:
    $ref: './channels/machines.yml#/io'
  machines/{id}/status:
    $ref: './channels/machines.yml#/status'

servers:
  server:
    description: The URL is the same one you use to access the Cloud CNC user interface
    protocol: socketio
    protocolVersion: '4.5.0'
    url: 'https://your-cloud-cnc-instance.local'

components:
  securitySchemes:
    session:
      description: |
        The security scheme used by established user and relay clients. Note: this is the same
        session scheme used by the HTTP API.
      in: cookie
      name: session
      type: httpApiKey