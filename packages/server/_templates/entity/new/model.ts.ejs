---
to: src/models/<%- h.changeCase.param(h.inflection.singularize(name)) %>.ts
---
/**
 * @fileoverview Unified <%- h.changeCase.no(h.inflection.singularize(name)) %> model
 */

//Imports
import Joi from 'joi';
import {model as createModel, Document} from 'mongoose';
import joigoose from '@/lib/joigoose';

//<%- h.changeCase.sentence(h.inflection.singularize(name)) %> interface
interface I<%- h.changeCase.pascal(h.inflection.singularize(name), false) %>
{<% for (const field of uniqueRequestFields) { %>
  /**
<%- h.multiline(field.description, 3) %>
   */
  <%- field.name %>: <%- field.typescriptType %>;
<% } -%>
}

//<%- h.changeCase.sentence(h.inflection.singularize(name)) %> document interface
type I<%- h.changeCase.pascal(h.inflection.singularize(name), false) %>Document = Document | I<%- h.changeCase.pascal(h.inflection.singularize(name), false) %>;

//Joi schema
const <%- h.changeCase.pascal(h.inflection.singularize(name), false) %>Schema = Joi.object({
<% for (const [field, separator] of h.list(uniqueRequestFields, ',')) { -%>
  <%- field.name %>: <%- field.joiType %><%- separator %>
<% } -%>
});

//Mongoose model
const <%- h.changeCase.pascal(h.inflection.singularize(name), false) %> = createModel<I<%- h.changeCase.pascal(h.inflection.singularize(name), false) %>Document>('<%- h.changeCase.camel(h.inflection.pluralize(name), false) %>', joigoose.convert(<%- h.changeCase.pascal(h.inflection.singularize(name), false) %>Schema));

//Export
export {
  I<%- h.changeCase.pascal(h.inflection.singularize(name), false) %>,
  I<%- h.changeCase.pascal(h.inflection.singularize(name), false) %>Document,
  <%- h.changeCase.pascal(h.inflection.singularize(name), false) %>Schema,
  <%- h.changeCase.pascal(h.inflection.singularize(name), false) %>
};