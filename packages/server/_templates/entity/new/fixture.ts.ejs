---
to: test/fixtures/<%- h.changeCase.param(h.inflection.singularize(name)) %>.ts
---
/**
 * @fileoverview <%- h.changeCase.sentence(h.inflection.singularize(name)) %> fixtures
 */

//Imports
import {I<%- h.changeCase.pascal(h.inflection.singularize(name), false) %>} from '@/server/models/<%- h.changeCase.param(h.inflection.singularize(name)) %>';
import {WithID} from '@/server/lib/types';

//Fixtures
//TODO: add realistic data
export const <%- h.changeCase.camel(h.inflection.singularize(name)) %>A = {
  id: '',
<% for (const [schema, separator] of h.list(schemas, ',')) { -%>
  <%- schema.key %>: null<%- separator %>
<% } -%>
} as WithID<I<%- h.changeCase.pascal(h.inflection.singularize(name), false) %>>;

export const <%- h.changeCase.camel(h.inflection.singularize(name)) %>B = {
  id: '',
<% for (const [schema, separator] of h.list(schemas, ',')) { -%>
  <%- schema.key %>: null<%- separator %>
<% } -%>
} as WithID<I<%- h.changeCase.pascal(h.inflection.singularize(name), false) %>>;